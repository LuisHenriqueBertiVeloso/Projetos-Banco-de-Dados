
--CARREGAR OS DADOS DE CLIENTES (1ª CARGA)
DECLARE @DATA_FIM_VALIDADE DATETIME = GETDATE() --DEFINE VARIAVEIS PARA EVITAR DATAS DIFERENTES NA MESMA CARGA
DECLARE @DATA_INICIO_VALIDADE DATETIME = DATEADD(MILLISECOND, 3, @DATA_FIM_VALIDADE) 
INSERT INTO DIMENSIONAL..DIMENSAOCLIENTE(IDCLIENTE, CLIENTE, ESTADO, SEXO, STATUS, DATAINICIOVALIDADE, DATAFIMVALIDADE)
SELECT IDCLIENTE, CLIENTE, ESTADO, SEXO, STATUS, DATAINICIOVALIDADE, DATAFIMVALIDADE FROM (

MERGE DIMENSIONAL..DIMENSAOCLIENTE AS T  
    USING (
		SELECT * FROM RELACIONAL..CLIENTES
	) AS S 
    ON (T.IDCLIENTE = S.IDCLIENTE AND T.DATAFIMVALIDADE IS NULL)
    WHEN MATCHED AND 
		(
			S.CLIENTE <> T.CLIENTE OR
			S.ESTADO <> T.ESTADO OR
			S.SEXO <> T.SEXO OR
			S.STATUS <> T.STATUS		
		)  
	THEN   
        UPDATE SET T.DATAFIMVALIDADE = @DATA_FIM_VALIDADE  
    WHEN NOT MATCHED BY TARGET THEN  
        INSERT (IDCLIENTE, CLIENTE, ESTADO, SEXO, STATUS, DATAINICIOVALIDADE, DATAFIMVALIDADE)  
        VALUES (S.IDCLIENTE, S.CLIENTE, S.ESTADO, S.SEXO, S.STATUS, @DATA_INICIO_VALIDADE, NULL)
	
	OUTPUT $ACTION AS ACTION, S.IDCLIENTE, S.CLIENTE, S.ESTADO, S.SEXO, S.STATUS, @DATA_INICIO_VALIDADE AS DATAINICIOVALIDADE, NULL AS DATAFIMVALIDADE
) AS MERGE_OUTPUT
WHERE MERGE_OUTPUT.ACTION='UPDATE'

----CARREGAR OS DADOS DE PRODUTOS (1ª CARGA)
DECLARE @DATA_FIM_VALIDADE DATETIME = GETDATE() --DEFINE VARIAVEIS PARA EVITAR DATAS DIFERENTES NA MESMA CARGA
DECLARE @DATA_INICIO_VALIDADE DATETIME = DATEADD(MILLISECOND, 3, @DATA_FIM_VALIDADE) 
INSERT INTO DIMENSIONAL..DIMENSAOPRODUTO(IDPRODUTO, PRODUTO, DATAINICIOVALIDADE, DATAFIMVALIDADE)
SELECT IDPRODUTO, PRODUTO, DATAINICIOVALIDADE, DATAFIMVALIDADE FROM (

MERGE DIMENSIONAL..DIMENSAOPRODUTO AS T  
    USING (
		SELECT * FROM RELACIONAL..PRODUTOS
	) AS S 
    ON (T.IDPRODUTO = S.IDPRODUTO AND T.DATAFIMVALIDADE IS NULL)
    WHEN MATCHED AND 
		(
			S.PRODUTO <> T.PRODUTO 		
		)  
	THEN   
        UPDATE SET T.DATAFIMVALIDADE = @DATA_FIM_VALIDADE  
    WHEN NOT MATCHED BY TARGET THEN  
        INSERT (IDPRODUTO, PRODUTO, DATAINICIOVALIDADE, DATAFIMVALIDADE)  
        VALUES (IDPRODUTO, PRODUTO, @DATA_INICIO_VALIDADE, NULL)
	OUTPUT $ACTION AS ACTION, S.IDPRODUTO, S.PRODUTO, @DATA_INICIO_VALIDADE AS DATAINICIOVALIDADE, NULL AS DATAFIMVALIDADE
) AS MERGE_OUTPUT
WHERE MERGE_OUTPUT.ACTION='UPDATE'

--CARREGAR OS DADOS DE VENDEDORES (1ª CARGA)
DECLARE @DATA_FIM_VALIDADE DATETIME = GETDATE() --DEFINE VARIAVEIS PARA EVITAR DATAS DIFERENTES NA MESMA CARGA
DECLARE @DATA_INICIO_VALIDADE DATETIME = DATEADD(MILLISECOND, 3, @DATA_FIM_VALIDADE) 
INSERT INTO DIMENSIONAL..DIMENSAOVENDEDOR(IDVENDEDOR, NOME, DATAINICIOVALIDADE, DATAFIMVALIDADE)
SELECT IDVENDEDOR, NOME, DATAINICIOVALIDADE, DATAFIMVALIDADE FROM (

MERGE DIMENSIONAL..DIMENSAOVENDEDOR AS T  
    USING (
		SELECT * FROM RELACIONAL..VENDEDORES
	) AS S 
    ON (T.IDVENDEDOR = S.IDVENDEDOR AND T.DATAFIMVALIDADE IS NULL)
    WHEN MATCHED AND 
		(
			S.NOME <> T.NOME 		
		)  
	THEN   
        UPDATE SET T.DATAFIMVALIDADE = @DATA_FIM_VALIDADE  
    WHEN NOT MATCHED BY TARGET THEN  
        INSERT (IDVENDEDOR, NOME, DATAINICIOVALIDADE, DATAFIMVALIDADE)  
        VALUES (IDVENDEDOR, NOME, @DATA_INICIO_VALIDADE, NULL)
	OUTPUT $ACTION AS ACTION, S.IDVENDEDOR, S.NOME, @DATA_INICIO_VALIDADE AS DATAINICIOVALIDADE, NULL AS DATAFIMVALIDADE
) AS MERGE_OUTPUT
WHERE MERGE_OUTPUT.ACTION='UPDATE'

--CARREGA SOMENTE O MÊS DE JANEIRO NA FATO VENDAS
INSERT INTO DIMENSIONAL..FATOVENDAS(CHAVEVENDEDOR, CHAVECLIENTE, CHAVEPRODUTO, CHAVETEMPO, QUANTIDADE, VALORUNITARIO, VALORTOTAL, DESCONTO)
SELECT
	VDD.CHAVEVENDEDOR,
    C.CHAVECLIENTE,
    P.CHAVEPRODUTO,
    T.CHAVETEMPO,
    IV.QUANTIDADE,
    IV.VALORUNITARIO,
    IV.VALORTOTAL,
    IV.DESCONTO
FROM RELACIONAL..VENDAS V
INNER JOIN DIMENSIONAL..DIMENSAOVENDEDOR VDD
	ON V.IDVENDEDOR = VDD.IDVENDEDOR AND VDD.DATAFIMVALIDADE IS NULL /*DATAFIMVALIDADE IS NULL REPRESENTA O REGISTRO ATUAL DO VENDEDOR PARA A CARGA DA FATO NO MOMENTO*/
INNER JOIN RELACIONAL..ITENSVENDA IV
	ON V.IDVENDA = IV.IDVENDA
INNER JOIN DIMENSIONAL..DIMENSAOCLIENTE C
	ON V.IDCLIENTE = C.IDCLIENTE AND C.DATAFIMVALIDADE IS NULL /*DATAFIMVALIDADE IS NULL REPRESENTA O REGISTRO ATUAL DO CLIENTE PARA A CARGA DA FATO NO MOMENTO*/
INNER JOIN DIMENSIONAL..DIMENSAOPRODUTO P
	ON IV.IDPRODUTO = P.IDPRODUTO AND P.DATAFIMVALIDADE IS NULL /*DATAFIMVALIDADE IS NULL REPRESENTA O REGISTRO ATUAL DO PRODUTO PARA A CARGA DA FATO NO MOMENTO*/
INNER JOIN DIMENSIONAL..DIMENSAOTEMPO T
	ON V.DATA = T.DATA

WHERE MONTH(V.DATA) = 1 --JANEIRO

--FAZ UMA ALTERAÇÃO DE PLANO DOS CLIENTES DE ID 1 A 5
UPDATE RELACIONAL..CLIENTES SET STATUS = 'GOLD' WHERE IDCLIENTE BETWEEN 1 AND 5

----CARREGAR OS DADOS DE CLIENTES. SÓ FARÁ TRATAMENTO DE HISTÓRICO NOS REGISTROS ALTERADOS (CLIENTES DE ID 1 A 5)
DECLARE @DATA_FIM_VALIDADE DATETIME = GETDATE() --DEFINE VARIAVEIS PARA EVITAR DATAS DIFERENTES NA MESMA CARGA
DECLARE @DATA_INICIO_VALIDADE DATETIME = DATEADD(MILLISECOND, 3, @DATA_FIM_VALIDADE) 
INSERT INTO DIMENSIONAL..DIMENSAOCLIENTE(IDCLIENTE, CLIENTE, ESTADO, SEXO, STATUS, DATAINICIOVALIDADE, DATAFIMVALIDADE)
SELECT IDCLIENTE, CLIENTE, ESTADO, SEXO, STATUS, DATAINICIOVALIDADE, DATAFIMVALIDADE FROM (
MERGE DIMENSIONAL..DIMENSAOCLIENTE AS T  
    USING (
		SELECT * FROM RELACIONAL..CLIENTES
	) AS S 
    ON (T.IDCLIENTE = S.IDCLIENTE AND T.DATAFIMVALIDADE IS NULL)
    WHEN MATCHED AND 
		(
			S.CLIENTE <> T.CLIENTE OR
			S.ESTADO <> T.ESTADO OR
			S.SEXO <> T.SEXO OR
			S.STATUS <> T.STATUS		
		)  
	THEN   
        UPDATE SET T.DATAFIMVALIDADE = @DATA_FIM_VALIDADE  
    WHEN NOT MATCHED BY TARGET THEN  
        INSERT (IDCLIENTE, CLIENTE, ESTADO, SEXO, STATUS, DATAINICIOVALIDADE, DATAFIMVALIDADE)  
        VALUES (S.IDCLIENTE, S.CLIENTE, S.ESTADO, S.SEXO, S.STATUS, @DATA_INICIO_VALIDADE, NULL)
	
	OUTPUT $ACTION AS ACTION, S.IDCLIENTE, S.CLIENTE, S.ESTADO, S.SEXO, S.STATUS, @DATA_INICIO_VALIDADE AS DATAINICIOVALIDADE, NULL AS DATAFIMVALIDADE
) AS MERGE_OUTPUT
WHERE MERGE_OUTPUT.ACTION='UPDATE'

--CONSULTA OS CLIENTES ALTERADOS PARA VERIFICAR O HISTÓRICO DE CADA CLIENTE. CAMPOS DE DATA FORAM ATUALIZADOS
SELECT * FROM DIMENSIONAL..DIMENSAOCLIENTE WHERE IDCLIENTE BETWEEN 1 AND 5

--VERIFICA QUE OS CLIENTES DA CARGA DA FATO REFERENTE À JANEIRO ESTÃO APONTANDO PARA AS SKS ANTIGAS DOS CLIENTES DE 1,2,3 E 5
SELECT * FROM DIMENSIONAL..FATOVENDAS F
	INNER JOIN DIMENSIONAL..DIMENSAOCLIENTE C
    	ON F.CHAVECLIENTE = C.CHAVECLIENTE
WHERE C.IDCLIENTE BETWEEN 1 AND 5

--CARREGA SOMENTE O MÊS DE FEVEREIRO NA FATO VENDAS
INSERT INTO DIMENSIONAL..FATOVENDAS(CHAVEVENDEDOR, CHAVECLIENTE, CHAVEPRODUTO, CHAVETEMPO, QUANTIDADE, VALORUNITARIO, VALORTOTAL, DESCONTO)
SELECT
	VDD.CHAVEVENDEDOR,
    C.CHAVECLIENTE,
    P.CHAVEPRODUTO,
    T.CHAVETEMPO,
    IV.QUANTIDADE,
    IV.VALORUNITARIO,
    IV.VALORTOTAL,
    IV.DESCONTO
FROM RELACIONAL..VENDAS V
INNER JOIN DIMENSIONAL..DIMENSAOVENDEDOR VDD
	ON V.IDVENDEDOR = VDD.IDVENDEDOR AND VDD.DATAFIMVALIDADE IS NULL /*DATAFIMVALIDADE IS NULL REPRESENTA O REGISTRO ATUAL DO VENDEDOR PARA A CARGA DA FATO NO MOMENTO*/
INNER JOIN RELACIONAL..ITENSVENDA IV
	ON V.IDVENDA = IV.IDVENDA
INNER JOIN DIMENSIONAL..DIMENSAOCLIENTE C
	ON V.IDCLIENTE = C.IDCLIENTE AND C.DATAFIMVALIDADE IS NULL /*DATAFIMVALIDADE IS NULL REPRESENTA O REGISTRO ATUAL DO CLIENTE PARA A CARGA DA FATO NO MOMENTO*/
INNER JOIN DIMENSIONAL..DIMENSAOPRODUTO P
	ON IV.IDPRODUTO = P.IDPRODUTO AND P.DATAFIMVALIDADE IS NULL /*DATAFIMVALIDADE IS NULL REPRESENTA O REGISTRO ATUAL DO PRODUTO PARA A CARGA DA FATO NO MOMENTO*/
INNER JOIN DIMENSIONAL..DIMENSAOTEMPO T
	ON V.DATA = T.DATA
WHERE MONTH(V.DATA) = 02

--VERIFICA QUE OS CLIENTES DA CARGA DA FATO REFERENTE À JANEIRO ESTÃO APONTANDO PARA AS SKS ANTIGAS DOS CLIENTES DE 1 A 5. EM FEVEREIRO SOMENTE O CLIENTE 5 REALIZOU COMPRAS.
--OS REGISTROS DA FATO JÁ APONTAM PARA A ÚLTIMA SK DO CLIENTE
SELECT * FROM DIMENSIONAL..FATOVENDAS F
	INNER JOIN DIMENSIONAL..DIMENSAOCLIENTE C
    	ON F.CHAVECLIENTE = C.CHAVECLIENTE
WHERE C.IDCLIENTE BETWEEN 1 AND 5

--CARREGA SOMENTE O MÊS DE MARÇO NA FATO VENDAS
INSERT INTO DIMENSIONAL..FATOVENDAS(CHAVEVENDEDOR, CHAVECLIENTE, CHAVEPRODUTO, CHAVETEMPO, QUANTIDADE, VALORUNITARIO, VALORTOTAL, DESCONTO)
SELECT
	VDD.CHAVEVENDEDOR,
    C.CHAVECLIENTE,
    P.CHAVEPRODUTO,
    T.CHAVETEMPO,
    IV.QUANTIDADE,
    IV.VALORUNITARIO,
    IV.VALORTOTAL,
    IV.DESCONTO
FROM RELACIONAL..VENDAS V
INNER JOIN DIMENSIONAL..DIMENSAOVENDEDOR VDD
	ON V.IDVENDEDOR = VDD.IDVENDEDOR AND VDD.DATAFIMVALIDADE IS NULL /*DATAFIMVALIDADE IS NULL REPRESENTA O REGISTRO ATUAL DO VENDEDOR PARA A CARGA DA FATO NO MOMENTO*/
INNER JOIN RELACIONAL..ITENSVENDA IV
	ON V.IDVENDA = IV.IDVENDA
INNER JOIN DIMENSIONAL..DIMENSAOCLIENTE C
	ON V.IDCLIENTE = C.IDCLIENTE AND C.DATAFIMVALIDADE IS NULL /*DATAFIMVALIDADE IS NULL REPRESENTA O REGISTRO ATUAL DO CLIENTE PARA A CARGA DA FATO NO MOMENTO*/
INNER JOIN DIMENSIONAL..DIMENSAOPRODUTO P
	ON IV.IDPRODUTO = P.IDPRODUTO AND P.DATAFIMVALIDADE IS NULL /*DATAFIMVALIDADE IS NULL REPRESENTA O REGISTRO ATUAL DO PRODUTO PARA A CARGA DA FATO NO MOMENTO*/
INNER JOIN DIMENSIONAL..DIMENSAOTEMPO T
	ON V.DATA = T.DATA
WHERE MONTH(V.DATA) = 03

--EM MARÇO NENHUM DOS CLIENTES QUE ESTAMOS MAPEANDO (1 A 5) FEZ COMPRAS.
SELECT * FROM DIMENSIONAL..FATOVENDAS F
	INNER JOIN DIMENSIONAL..DIMENSAOCLIENTE C
    	ON F.CHAVECLIENTE = C.CHAVECLIENTE
    INNER JOIN DIMENSIONAL..DIMENSAOTEMPO T
    	ON F.CHAVETEMPO = T.CHAVETEMPO
WHERE C.IDCLIENTE BETWEEN 1 AND 5 AND T.MES = 3

--FAZ UMA ALTERAÇÃO NO PLANO DO CLIENTE 3
UPDATE RELACIONAL..CLIENTES SET STATUS = 'PLATINUM' WHERE IDCLIENTE = 3

--CARREGAR OS DADOS DE CLIENTES. SÓ FARÁ TRATAMENTO DE HISTÓRICO NOS REGISTROS ALTERADOS (CLIENTE 3)
DECLARE @DATA_FIM_VALIDADE DATETIME = GETDATE() --DEFINE VARIAVEIS PARA EVITAR DATAS DIFERENTES NA MESMA CARGA
DECLARE @DATA_INICIO_VALIDADE DATETIME = DATEADD(MILLISECOND, 3, @DATA_FIM_VALIDADE) 
INSERT INTO DIMENSIONAL..DIMENSAOCLIENTE(IDCLIENTE, CLIENTE, ESTADO, SEXO, STATUS, DATAINICIOVALIDADE, DATAFIMVALIDADE)
SELECT IDCLIENTE, CLIENTE, ESTADO, SEXO, STATUS, DATAINICIOVALIDADE, DATAFIMVALIDADE FROM (

MERGE DIMENSIONAL..DIMENSAOCLIENTE AS T  
    USING (
		SELECT * FROM RELACIONAL..CLIENTES
	) AS S 
    ON (T.IDCLIENTE = S.IDCLIENTE AND T.DATAFIMVALIDADE IS NULL)
    WHEN MATCHED AND 
		(
			S.CLIENTE <> T.CLIENTE OR
			S.ESTADO <> T.ESTADO OR
			S.SEXO <> T.SEXO OR
			S.STATUS <> T.STATUS		
		)  
	THEN   
        UPDATE SET T.DATAFIMVALIDADE = @DATA_FIM_VALIDADE  
    WHEN NOT MATCHED BY TARGET THEN  
        INSERT (IDCLIENTE, CLIENTE, ESTADO, SEXO, STATUS, DATAINICIOVALIDADE, DATAFIMVALIDADE)  
        VALUES (S.IDCLIENTE, S.CLIENTE, S.ESTADO, S.SEXO, S.STATUS, @DATA_INICIO_VALIDADE, NULL)
	
	OUTPUT $ACTION AS ACTION, S.IDCLIENTE, S.CLIENTE, S.ESTADO, S.SEXO, S.STATUS, @DATA_INICIO_VALIDADE AS DATAINICIOVALIDADE, NULL AS DATAFIMVALIDADE
) AS MERGE_OUTPUT
WHERE MERGE_OUTPUT.ACTION='UPDATE'

--CONSULTA OS CLIENTES ALTERADOS PARA VERIFICAR O HISTÓRICO DE CADA CLIENTE. CAMPOS DE DATA FORAM ATUALIZADOS
SELECT * FROM DIMENSIONAL..DIMENSAOCLIENTE WHERE IDCLIENTE BETWEEN 1 AND 5

--CARREGA SOMENTE OS OUTROS MESES
INSERT INTO DIMENSIONAL..FATOVENDAS(CHAVEVENDEDOR, CHAVECLIENTE, CHAVEPRODUTO, CHAVETEMPO, QUANTIDADE, VALORUNITARIO, VALORTOTAL, DESCONTO)
SELECT
	VDD.CHAVEVENDEDOR,
    C.CHAVECLIENTE,
    P.CHAVEPRODUTO,
    T.CHAVETEMPO,
    IV.QUANTIDADE,
    IV.VALORUNITARIO,
    IV.VALORTOTAL,
    IV.DESCONTO
FROM RELACIONAL..VENDAS V
INNER JOIN DIMENSIONAL..DIMENSAOVENDEDOR VDD
	ON V.IDVENDEDOR = VDD.IDVENDEDOR AND VDD.DATAFIMVALIDADE IS NULL /*DATAFIMVALIDADE IS NULL REPRESENTA O REGISTRO ATUAL DO VENDEDOR PARA A CARGA DA FATO NO MOMENTO*/
INNER JOIN RELACIONAL..ITENSVENDA IV
	ON V.IDVENDA = IV.IDVENDA
INNER JOIN DIMENSIONAL..DIMENSAOCLIENTE C
	ON V.IDCLIENTE = C.IDCLIENTE AND C.DATAFIMVALIDADE IS NULL /*DATAFIMVALIDADE IS NULL REPRESENTA O REGISTRO ATUAL DO CLIENTE PARA A CARGA DA FATO NO MOMENTO*/
INNER JOIN DIMENSIONAL..DIMENSAOPRODUTO P
	ON IV.IDPRODUTO = P.IDPRODUTO AND P.DATAFIMVALIDADE IS NULL /*DATAFIMVALIDADE IS NULL REPRESENTA O REGISTRO ATUAL DO PRODUTO PARA A CARGA DA FATO NO MOMENTO*/
INNER JOIN DIMENSIONAL..DIMENSAOTEMPO T
	ON V.DATA = T.DATA

WHERE MONTH(V.DATA) > 03

--VERIFICA TODAS AS COMPRAS DOS CLIENTES QUE ESTAMOS MAPEANDO (1 A 5). VERIFICAMOS QUE HAVIA COMPRAS COM A SK ANTIGA E AGORA HÁ COMPRAS FEITAS COM O ÚLTIMO STATUS (SK NOVA)
SELECT * FROM DIMENSIONAL..FATOVENDAS F
	INNER JOIN DIMENSIONAL..DIMENSAOCLIENTE C
    	ON F.CHAVECLIENTE = C.CHAVECLIENTE
    INNER JOIN DIMENSIONAL..DIMENSAOTEMPO T
    	ON F.CHAVETEMPO = T.CHAVETEMPO
WHERE C.IDCLIENTE BETWEEN 1 AND 5